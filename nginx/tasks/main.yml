- name: Install python-passlib for htpasswd ansible module
  apt: pkg=python-passlib state=present #for htpasswd

- name: Ensure nginx config dir
  file: path={{ nginx.config_dir_path }} state=directory mode=0755

- name: Make basic auth for nginx admin user
  htpasswd:
    path: "{{ nginx.config_dir_path }}/{{ nginx.auth_basic_user_file }}"
    name: "{{ nginx.adminusername }}"
    password: "{{ nginx.adminpassword }}"
    owner: root
    group: root 
    mode: 0644
    state: present

- name: Make basic auth for nginx readonly user
  htpasswd:
    path: "{{ nginx.config_dir_path }}/{{ nginx.auth_basic_user_file }}"
    name: "{{ nginx.readonlyusername }}"
    password: "{{ nginx.readonlypassword }}"
    owner: root
    group: root 
    mode: 0644
    state: present

- name: stat docker-registry certificate file
  stat: path={{ nginx.config_dir_path }}/domain.key
  register: docker_registry_cert_stat

- name: create self-signed SSL cert
  command: openssl req -newkey rsa:4096 -subj "/C=CN/ST=XIAMEN/L=FUJIAN/O=IT/CN={{ nginx.domain }}" -nodes -sha256 -keyout {{ nginx.config_dir_path}}/domain.key -x509 -days 3650 -out {{ nginx.config_dir_path}}/domain.crt
  when: not docker_registry_cert_stat.stat.exists

- name: registry Automatically Start Containers
  stat: path={{ nginx.config_dir_path}}/nginx.conf
  register: nginx_conf_stat

- name: registry Automatically Start Containers conf
  template: src=nginx.j2 dest="{{ nginx.config_dir_path}}/nginx.conf"
  when: not nginx_conf_stat.stat.exists

- name: Run nginx-registry-proxy container
  docker: 
    name: nginx
    image: nginx:latest
    links:
    - "registry"
    ports: "443:443"
    restart_policy: always
    volumes: 
    - "{{ nginx.config_dir_path }}:/etc/nginx/conf.d"

